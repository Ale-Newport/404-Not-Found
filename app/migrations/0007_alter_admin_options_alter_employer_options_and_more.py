# Generated by Django 5.1.2 on 2025-02-03 17:38

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0006_alter_employer_options'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='admin',
            options={},
        ),
        migrations.AlterModelOptions(
            name='employer',
            options={},
        ),
        migrations.AlterModelManagers(
            name='admin',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='employee',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='employer',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='admin',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='admin',
            name='username',
            field=models.CharField(default='default_username', max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='employee',
            name='username',
            field=models.CharField(default='default_username', max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='employer',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='employer',
            name='username',
            field=models.CharField(default='default_username', max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='admin',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_groups', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='admin',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='admin',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_permissions', to='auth.permission'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_groups', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_permissions', to='auth.permission'),
        ),
        migrations.AlterField(
            model_name='employer',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_groups', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='employer',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='employer',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_permissions', to='auth.permission'),
        ),
    ]
